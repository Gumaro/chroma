# Makefile.in generated by automake 1.9.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SOURCES = $(ExampleBuildingBlocks_SOURCES) $(apesmear_SOURCES) $(bar3ptfn_SOURCES) $(cfgtransf_SOURCES) $(chroma_SOURCES) $(collect_multi_propcomp_SOURCES) $(collect_propcomp_SOURCES) $(hmc_SOURCES) $(hypsmear_SOURCES) $(hypsmear3d_SOURCES) $(hypsmear4d_SOURCES) $(make_source_SOURCES) $(mres_SOURCES) $(multi_propagator_SOURCES) $(multi_propagator_comp_SOURCES) $(propagator_SOURCES) $(propagator_comp_SOURCES) $(propagator_hack_SOURCES) $(qpropadd_SOURCES) $(qpropgfix_SOURCES) $(qpropqio_SOURCES) $(qproptransf_SOURCES) $(qproptrev_SOURCES) $(qqq_w_SOURCES) $(seqsource_SOURCES) $(sink_smearing_SOURCES) $(spectrum_w_SOURCES) $(stoutsmear_SOURCES) $(wallformfac_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_1 = -I$(TOPDIR)/other_libs/@SSE_DSLASH_DIR@/include -I$(BUILDDIR)/other_libs/@SSE_DSLASH_DIR@/include
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_2 = -L$(BUILDDIR)/other_libs/@SSE_DSLASH_DIR@/lib
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_3 = -llevel3 @QDPXX_LIBS@
@BUILD_SSE_DWF_CG_TRUE@am__append_4 = -I$(TOPDIR)/other_libs/@SSE_DWF_CG_DIR@/include
@BUILD_SSE_DWF_CG_TRUE@am__append_5 = -L$(BUILDDIR)/other_libs/@SSE_DWF_CG_DIR@/lib
@BUILD_SSE_DWF_CG_TRUE@am__append_6 = -lsse_dwf_cg 
bin_PROGRAMS = propagator$(EXEEXT) collect_propcomp$(EXEEXT) \
	seqsource$(EXEEXT) make_source$(EXEEXT) \
	ExampleBuildingBlocks$(EXEEXT) hypsmear$(EXEEXT) \
	cfgtransf$(EXEEXT) sink_smearing$(EXEEXT) qpropgfix$(EXEEXT) \
	qproptrev$(EXEEXT) apesmear$(EXEEXT) stoutsmear$(EXEEXT) \
	hmc$(EXEEXT) hypsmear3d$(EXEEXT) hypsmear4d$(EXEEXT) \
	chroma$(EXEEXT) spectrum_w$(EXEEXT) qqq_w$(EXEEXT) \
	bar3ptfn$(EXEEXT) qproptransf$(EXEEXT) wallformfac$(EXEEXT) \
	mres$(EXEEXT) propagator_hack$(EXEEXT) qpropqio$(EXEEXT)
EXTRA_PROGRAMS = qpropadd$(EXEEXT) propagator_comp$(EXEEXT) \
	multi_propagator$(EXEEXT) multi_propagator_comp$(EXEEXT) \
	collect_multi_propcomp$(EXEEXT)
subdir = mainprogs/main
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/./config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/lib/chroma_config_internal.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_ExampleBuildingBlocks_OBJECTS = ExampleBuildingBlocks.$(OBJEXT)
ExampleBuildingBlocks_OBJECTS = $(am_ExampleBuildingBlocks_OBJECTS)
ExampleBuildingBlocks_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
am_apesmear_OBJECTS = apesmear.$(OBJEXT)
apesmear_OBJECTS = $(am_apesmear_OBJECTS)
apesmear_LDADD = $(LDADD)
am_bar3ptfn_OBJECTS = bar3ptfn.$(OBJEXT)
bar3ptfn_OBJECTS = $(am_bar3ptfn_OBJECTS)
bar3ptfn_LDADD = $(LDADD)
am_cfgtransf_OBJECTS = cfgtransf.$(OBJEXT)
cfgtransf_OBJECTS = $(am_cfgtransf_OBJECTS)
cfgtransf_LDADD = $(LDADD)
am_chroma_OBJECTS = chroma.$(OBJEXT)
chroma_OBJECTS = $(am_chroma_OBJECTS)
chroma_LDADD = $(LDADD)
am_collect_multi_propcomp_OBJECTS = collect_multi_propcomp.$(OBJEXT)
collect_multi_propcomp_OBJECTS = $(am_collect_multi_propcomp_OBJECTS)
collect_multi_propcomp_LDADD = $(LDADD)
am_collect_propcomp_OBJECTS = collect_propcomp.$(OBJEXT)
collect_propcomp_OBJECTS = $(am_collect_propcomp_OBJECTS)
collect_propcomp_LDADD = $(LDADD)
am_hmc_OBJECTS = hmc.$(OBJEXT)
hmc_OBJECTS = $(am_hmc_OBJECTS)
hmc_LDADD = $(LDADD)
am_hypsmear_OBJECTS = hypsmear.$(OBJEXT)
hypsmear_OBJECTS = $(am_hypsmear_OBJECTS)
hypsmear_LDADD = $(LDADD)
am_hypsmear3d_OBJECTS = hypsmear3d.$(OBJEXT)
hypsmear3d_OBJECTS = $(am_hypsmear3d_OBJECTS)
hypsmear3d_LDADD = $(LDADD)
am_hypsmear4d_OBJECTS = hypsmear4d.$(OBJEXT)
hypsmear4d_OBJECTS = $(am_hypsmear4d_OBJECTS)
hypsmear4d_LDADD = $(LDADD)
am_make_source_OBJECTS = make_source.$(OBJEXT)
make_source_OBJECTS = $(am_make_source_OBJECTS)
make_source_LDADD = $(LDADD)
am_mres_OBJECTS = mres.$(OBJEXT)
mres_OBJECTS = $(am_mres_OBJECTS)
mres_LDADD = $(LDADD)
am_multi_propagator_OBJECTS = multi_propagator.$(OBJEXT)
multi_propagator_OBJECTS = $(am_multi_propagator_OBJECTS)
multi_propagator_LDADD = $(LDADD)
am_multi_propagator_comp_OBJECTS = multi_propagator_comp.$(OBJEXT)
multi_propagator_comp_OBJECTS = $(am_multi_propagator_comp_OBJECTS)
multi_propagator_comp_LDADD = $(LDADD)
am_propagator_OBJECTS = propagator.$(OBJEXT)
propagator_OBJECTS = $(am_propagator_OBJECTS)
propagator_LDADD = $(LDADD)
am_propagator_comp_OBJECTS = propagator_comp.$(OBJEXT)
propagator_comp_OBJECTS = $(am_propagator_comp_OBJECTS)
propagator_comp_LDADD = $(LDADD)
am_propagator_hack_OBJECTS = propagator_hack.$(OBJEXT)
propagator_hack_OBJECTS = $(am_propagator_hack_OBJECTS)
propagator_hack_LDADD = $(LDADD)
am_qpropadd_OBJECTS = qpropadd.$(OBJEXT)
qpropadd_OBJECTS = $(am_qpropadd_OBJECTS)
qpropadd_LDADD = $(LDADD)
am_qpropgfix_OBJECTS = qpropgfix.$(OBJEXT)
qpropgfix_OBJECTS = $(am_qpropgfix_OBJECTS)
qpropgfix_LDADD = $(LDADD)
am_qpropqio_OBJECTS = qpropqio.$(OBJEXT)
qpropqio_OBJECTS = $(am_qpropqio_OBJECTS)
qpropqio_LDADD = $(LDADD)
am_qproptransf_OBJECTS = qproptransf.$(OBJEXT)
qproptransf_OBJECTS = $(am_qproptransf_OBJECTS)
qproptransf_LDADD = $(LDADD)
am_qproptrev_OBJECTS = qproptrev.$(OBJEXT)
qproptrev_OBJECTS = $(am_qproptrev_OBJECTS)
qproptrev_LDADD = $(LDADD)
am_qqq_w_OBJECTS = qqq_w.$(OBJEXT)
qqq_w_OBJECTS = $(am_qqq_w_OBJECTS)
qqq_w_LDADD = $(LDADD)
am_seqsource_OBJECTS = seqsource.$(OBJEXT)
seqsource_OBJECTS = $(am_seqsource_OBJECTS)
seqsource_LDADD = $(LDADD)
am_sink_smearing_OBJECTS = sink_smearing.$(OBJEXT)
sink_smearing_OBJECTS = $(am_sink_smearing_OBJECTS)
sink_smearing_LDADD = $(LDADD)
am_spectrum_w_OBJECTS = spectrum_w.$(OBJEXT)
spectrum_w_OBJECTS = $(am_spectrum_w_OBJECTS)
spectrum_w_LDADD = $(LDADD)
am_stoutsmear_OBJECTS = stoutsmear.$(OBJEXT)
stoutsmear_OBJECTS = $(am_stoutsmear_OBJECTS)
stoutsmear_LDADD = $(LDADD)
am_wallformfac_OBJECTS = wallformfac.$(OBJEXT)
wallformfac_OBJECTS = $(am_wallformfac_OBJECTS)
wallformfac_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/lib
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(ExampleBuildingBlocks_SOURCES) $(apesmear_SOURCES) \
	$(bar3ptfn_SOURCES) $(cfgtransf_SOURCES) $(chroma_SOURCES) \
	$(collect_multi_propcomp_SOURCES) $(collect_propcomp_SOURCES) \
	$(hmc_SOURCES) $(hypsmear_SOURCES) $(hypsmear3d_SOURCES) \
	$(hypsmear4d_SOURCES) $(make_source_SOURCES) $(mres_SOURCES) \
	$(multi_propagator_SOURCES) $(multi_propagator_comp_SOURCES) \
	$(propagator_SOURCES) $(propagator_comp_SOURCES) \
	$(propagator_hack_SOURCES) $(qpropadd_SOURCES) \
	$(qpropgfix_SOURCES) $(qpropqio_SOURCES) \
	$(qproptransf_SOURCES) $(qproptrev_SOURCES) $(qqq_w_SOURCES) \
	$(seqsource_SOURCES) $(sink_smearing_SOURCES) \
	$(spectrum_w_SOURCES) $(stoutsmear_SOURCES) \
	$(wallformfac_SOURCES)
DIST_SOURCES = $(ExampleBuildingBlocks_SOURCES) $(apesmear_SOURCES) \
	$(bar3ptfn_SOURCES) $(cfgtransf_SOURCES) $(chroma_SOURCES) \
	$(collect_multi_propcomp_SOURCES) $(collect_propcomp_SOURCES) \
	$(hmc_SOURCES) $(hypsmear_SOURCES) $(hypsmear3d_SOURCES) \
	$(hypsmear4d_SOURCES) $(make_source_SOURCES) $(mres_SOURCES) \
	$(multi_propagator_SOURCES) $(multi_propagator_comp_SOURCES) \
	$(propagator_SOURCES) $(propagator_comp_SOURCES) \
	$(propagator_hack_SOURCES) $(qpropadd_SOURCES) \
	$(qpropgfix_SOURCES) $(qpropqio_SOURCES) \
	$(qproptransf_SOURCES) $(qproptrev_SOURCES) $(qqq_w_SOURCES) \
	$(seqsource_SOURCES) $(sink_smearing_SOURCES) \
	$(spectrum_w_SOURCES) $(stoutsmear_SOURCES) \
	$(wallformfac_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
VPATH = @top_srcdir@/mainprogs/main
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_ASQTAD_CPS_INVERTER_WRAPPER_FALSE = @BUILD_ASQTAD_CPS_INVERTER_WRAPPER_FALSE@
BUILD_ASQTAD_CPS_INVERTER_WRAPPER_TRUE = @BUILD_ASQTAD_CPS_INVERTER_WRAPPER_TRUE@
BUILD_GMP_REMEZ_FALSE = @BUILD_GMP_REMEZ_FALSE@
BUILD_GMP_REMEZ_TRUE = @BUILD_GMP_REMEZ_TRUE@
BUILD_PAB_WILSON_DSLASH_FALSE = @BUILD_PAB_WILSON_DSLASH_FALSE@
BUILD_PAB_WILSON_DSLASH_TRUE = @BUILD_PAB_WILSON_DSLASH_TRUE@
BUILD_SSE_DWF_CG_FALSE = @BUILD_SSE_DWF_CG_FALSE@
BUILD_SSE_DWF_CG_TRUE = @BUILD_SSE_DWF_CG_TRUE@
BUILD_SSE_WILSON_DSLASH_FALSE = @BUILD_SSE_WILSON_DSLASH_FALSE@
BUILD_SSE_WILSON_DSLASH_TRUE = @BUILD_SSE_WILSON_DSLASH_TRUE@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DVIPDF = @DVIPDF@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
QDPXX_CONFIG = @QDPXX_CONFIG@
QDPXX_CXXFLAGS = @QDPXX_CXXFLAGS@
QDPXX_LDFLAGS = @QDPXX_LDFLAGS@
QDPXX_LIBS = @QDPXX_LIBS@
QDPXX_NC = @QDPXX_NC@
QDPXX_ND = @QDPXX_ND@
QDPXX_NS = @QDPXX_NS@
QDPXX_PARALLEL_ARCH = @QDPXX_PARALLEL_ARCH@
QDPXX_PRECISION = @QDPXX_PRECISION@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSE_DSLASH_DIR = @SSE_DSLASH_DIR@
SSE_DSLASH_ENABLED = @SSE_DSLASH_ENABLED@
SSE_DWF_CG_DIR = @SSE_DWF_CG_DIR@
SSE_DWF_CG_ENABLED = @SSE_DWF_CG_ENABLED@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

#
# VPATH
#
TOPDIR = @top_srcdir@
BUILDDIR = @top_builddir@

#
# Include Path
#
INCFLAGS = -I$(TOPDIR)/mainprogs/main -I$(TOPDIR)/lib -I$(BUILDDIR)/lib

#
# Any other compiler flags
#
AM_CXXFLAGS = $(INCFLAGS) @CXXFLAGS@ @QDPXX_CXXFLAGS@ $(am__append_1) \
	$(am__append_4)
AM_LDFLAGS = -L$(BUILDDIR)/lib @LDFLAGS@ @QDPXX_LDFLAGS@ \
	$(am__append_2) $(am__append_5)
LDADD = -lchroma @QDPXX_LIBS@ @LIBS@ $(am__append_3) $(am__append_6)

#
# Local Headers
#
HDRS = 

# Staggered specific programs
#EXTRA_PROGRAMS += 

#
# The program and its dependencies
#
chroma_SOURCES = chroma.cc
chroma_DEPENDENCIES = build_chroma_libs rebuild_other_libs
propagator_SOURCES = propagator.cc
propagator_DEPENDENCIES = build_chroma_libs rebuild_other_libs
propagator_comp_SOURCES = propagator_comp.cc
propagator_comp_DEPENDENCIES = build_chroma_libs rebuild_other_libs
propagator_hack_SOURCES = propagator_hack.cc
propagator_hack_DEPENDENCIES = build_chroma_libs rebuild_other_libs
seqsource_SOURCES = seqsource.cc
seqsource_DEPENDENCIES = build_chroma_libs rebuild_other_libs
multi_propagator_SOURCES = multi_propagator.cc
multi_propagator_DEPENDENCIES = build_chroma_libs rebuild_other_libs
multi_propagator_comp_SOURCES = multi_propagator_comp.cc
multi_propagator_comp_DEPENDENCIES = build_chroma_libs rebuild_other_libs
collect_propcomp_SOURCES = collect_propcomp.cc
collect_propcomp_DEPENDENCIES = build_chroma_libs rebuild_other_libs
collect_multi_propcomp_SOURCES = collect_multi_propcomp.cc
collect_multi_propcomp_DEPENDENCIES = build_chroma_libs rebuild_other_libs
spectrum_w_SOURCES = spectrum_w.cc
spectrum_w_DEPENDENCIES = build_chroma_libs rebuild_other_libs
hmc_SOURCES = hmc.cc
hmc_DEPENDENCIES = build_chroma_libs rebuild_other_libs
mres_SOURCES = mres.cc
mres_DEPENDENCIES = build_chroma_libs rebuild_other_libs
qqq_w_SOURCES = qqq_w.cc
qqq_w_DEPENDENCIES = build_chroma_libs rebuild_other_libs
bar3ptfn_SOURCES = bar3ptfn.cc
bar3ptfn_DEPENDENCIES = build_chroma_libs rebuild_other_libs
wallformfac_SOURCES = wallformfac.cc
wallformfac_DEPENDENCIES = build_chroma_libs rebuild_other_libs
make_source_SOURCES = make_source.cc
make_source_DEPENDENCIES = build_chroma_libs rebuild_other_libs
apesmear_SOURCES = apesmear.cc
apesmear_DEPENDENCIES = build_chroma_libs rebuild_other_libs
hypsmear_SOURCES = hypsmear.cc
hypsmear_DEPENDENCIES = build_chroma_libs rebuild_other_libs
hypsmear3d_SOURCES = hypsmear3d.cc
hypsmear3d_DEPENDENCIES = build_chroma_libs rebuild_other_libs
hypsmear4d_SOURCES = hypsmear4d.cc
hypsmear4d_DEPENDENCIES = build_chroma_libs rebuild_other_libs
stoutsmear_SOURCES = stoutsmear.cc
stoutsmear_DEPENDENCIES = build_chroma_libs rebuild_other_libs
qproptransf_SOURCES = qproptransf.cc
qproptransf_DEPENDENCIES = build_chroma_libs rebuild_other_libs
qpropqio_SOURCES = qpropqio.cc
qpropqio_DEPENDENCIES = build_chroma_libs rebuild_other_libs
qpropadd_SOURCES = qpropadd.cc
qpropadd_DEPENDENCIES = build_chroma_libs rebuild_other_libs
qpropgfix_SOURCES = qpropgfix.cc
qpropgfix_DEPENDENCIES = build_chroma_libs rebuild_other_libs
qproptrev_SOURCES = qproptrev.cc
qproptrev_DEPENDENCIES = build_chroma_libs rebuild_other_libs
ExampleBuildingBlocks_SOURCES = ExampleBuildingBlocks.cc
ExampleBuildingBlocks_DEPENDENCIES = build_chroma_libs rebuild_other_libs
cfgtransf_SOURCES = cfgtransf.cc
cfgtransf_DEPENDENCIES = build_chroma_libs rebuild_other_libs
sink_smearing_SOURCES = sink_smearing.cc
sink_smearing_DEPENDENCIES = build_chroma_libs rebuild_other_libs
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  mainprogs/main/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  mainprogs/main/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
ExampleBuildingBlocks$(EXEEXT): $(ExampleBuildingBlocks_OBJECTS) $(ExampleBuildingBlocks_DEPENDENCIES) 
	@rm -f ExampleBuildingBlocks$(EXEEXT)
	$(CXXLINK) $(ExampleBuildingBlocks_LDFLAGS) $(ExampleBuildingBlocks_OBJECTS) $(ExampleBuildingBlocks_LDADD) $(LIBS)
apesmear$(EXEEXT): $(apesmear_OBJECTS) $(apesmear_DEPENDENCIES) 
	@rm -f apesmear$(EXEEXT)
	$(CXXLINK) $(apesmear_LDFLAGS) $(apesmear_OBJECTS) $(apesmear_LDADD) $(LIBS)
bar3ptfn$(EXEEXT): $(bar3ptfn_OBJECTS) $(bar3ptfn_DEPENDENCIES) 
	@rm -f bar3ptfn$(EXEEXT)
	$(CXXLINK) $(bar3ptfn_LDFLAGS) $(bar3ptfn_OBJECTS) $(bar3ptfn_LDADD) $(LIBS)
cfgtransf$(EXEEXT): $(cfgtransf_OBJECTS) $(cfgtransf_DEPENDENCIES) 
	@rm -f cfgtransf$(EXEEXT)
	$(CXXLINK) $(cfgtransf_LDFLAGS) $(cfgtransf_OBJECTS) $(cfgtransf_LDADD) $(LIBS)
chroma$(EXEEXT): $(chroma_OBJECTS) $(chroma_DEPENDENCIES) 
	@rm -f chroma$(EXEEXT)
	$(CXXLINK) $(chroma_LDFLAGS) $(chroma_OBJECTS) $(chroma_LDADD) $(LIBS)
collect_multi_propcomp$(EXEEXT): $(collect_multi_propcomp_OBJECTS) $(collect_multi_propcomp_DEPENDENCIES) 
	@rm -f collect_multi_propcomp$(EXEEXT)
	$(CXXLINK) $(collect_multi_propcomp_LDFLAGS) $(collect_multi_propcomp_OBJECTS) $(collect_multi_propcomp_LDADD) $(LIBS)
collect_propcomp$(EXEEXT): $(collect_propcomp_OBJECTS) $(collect_propcomp_DEPENDENCIES) 
	@rm -f collect_propcomp$(EXEEXT)
	$(CXXLINK) $(collect_propcomp_LDFLAGS) $(collect_propcomp_OBJECTS) $(collect_propcomp_LDADD) $(LIBS)
hmc$(EXEEXT): $(hmc_OBJECTS) $(hmc_DEPENDENCIES) 
	@rm -f hmc$(EXEEXT)
	$(CXXLINK) $(hmc_LDFLAGS) $(hmc_OBJECTS) $(hmc_LDADD) $(LIBS)
hypsmear$(EXEEXT): $(hypsmear_OBJECTS) $(hypsmear_DEPENDENCIES) 
	@rm -f hypsmear$(EXEEXT)
	$(CXXLINK) $(hypsmear_LDFLAGS) $(hypsmear_OBJECTS) $(hypsmear_LDADD) $(LIBS)
hypsmear3d$(EXEEXT): $(hypsmear3d_OBJECTS) $(hypsmear3d_DEPENDENCIES) 
	@rm -f hypsmear3d$(EXEEXT)
	$(CXXLINK) $(hypsmear3d_LDFLAGS) $(hypsmear3d_OBJECTS) $(hypsmear3d_LDADD) $(LIBS)
hypsmear4d$(EXEEXT): $(hypsmear4d_OBJECTS) $(hypsmear4d_DEPENDENCIES) 
	@rm -f hypsmear4d$(EXEEXT)
	$(CXXLINK) $(hypsmear4d_LDFLAGS) $(hypsmear4d_OBJECTS) $(hypsmear4d_LDADD) $(LIBS)
make_source$(EXEEXT): $(make_source_OBJECTS) $(make_source_DEPENDENCIES) 
	@rm -f make_source$(EXEEXT)
	$(CXXLINK) $(make_source_LDFLAGS) $(make_source_OBJECTS) $(make_source_LDADD) $(LIBS)
mres$(EXEEXT): $(mres_OBJECTS) $(mres_DEPENDENCIES) 
	@rm -f mres$(EXEEXT)
	$(CXXLINK) $(mres_LDFLAGS) $(mres_OBJECTS) $(mres_LDADD) $(LIBS)
multi_propagator$(EXEEXT): $(multi_propagator_OBJECTS) $(multi_propagator_DEPENDENCIES) 
	@rm -f multi_propagator$(EXEEXT)
	$(CXXLINK) $(multi_propagator_LDFLAGS) $(multi_propagator_OBJECTS) $(multi_propagator_LDADD) $(LIBS)
multi_propagator_comp$(EXEEXT): $(multi_propagator_comp_OBJECTS) $(multi_propagator_comp_DEPENDENCIES) 
	@rm -f multi_propagator_comp$(EXEEXT)
	$(CXXLINK) $(multi_propagator_comp_LDFLAGS) $(multi_propagator_comp_OBJECTS) $(multi_propagator_comp_LDADD) $(LIBS)
propagator$(EXEEXT): $(propagator_OBJECTS) $(propagator_DEPENDENCIES) 
	@rm -f propagator$(EXEEXT)
	$(CXXLINK) $(propagator_LDFLAGS) $(propagator_OBJECTS) $(propagator_LDADD) $(LIBS)
propagator_comp$(EXEEXT): $(propagator_comp_OBJECTS) $(propagator_comp_DEPENDENCIES) 
	@rm -f propagator_comp$(EXEEXT)
	$(CXXLINK) $(propagator_comp_LDFLAGS) $(propagator_comp_OBJECTS) $(propagator_comp_LDADD) $(LIBS)
propagator_hack$(EXEEXT): $(propagator_hack_OBJECTS) $(propagator_hack_DEPENDENCIES) 
	@rm -f propagator_hack$(EXEEXT)
	$(CXXLINK) $(propagator_hack_LDFLAGS) $(propagator_hack_OBJECTS) $(propagator_hack_LDADD) $(LIBS)
qpropadd$(EXEEXT): $(qpropadd_OBJECTS) $(qpropadd_DEPENDENCIES) 
	@rm -f qpropadd$(EXEEXT)
	$(CXXLINK) $(qpropadd_LDFLAGS) $(qpropadd_OBJECTS) $(qpropadd_LDADD) $(LIBS)
qpropgfix$(EXEEXT): $(qpropgfix_OBJECTS) $(qpropgfix_DEPENDENCIES) 
	@rm -f qpropgfix$(EXEEXT)
	$(CXXLINK) $(qpropgfix_LDFLAGS) $(qpropgfix_OBJECTS) $(qpropgfix_LDADD) $(LIBS)
qpropqio$(EXEEXT): $(qpropqio_OBJECTS) $(qpropqio_DEPENDENCIES) 
	@rm -f qpropqio$(EXEEXT)
	$(CXXLINK) $(qpropqio_LDFLAGS) $(qpropqio_OBJECTS) $(qpropqio_LDADD) $(LIBS)
qproptransf$(EXEEXT): $(qproptransf_OBJECTS) $(qproptransf_DEPENDENCIES) 
	@rm -f qproptransf$(EXEEXT)
	$(CXXLINK) $(qproptransf_LDFLAGS) $(qproptransf_OBJECTS) $(qproptransf_LDADD) $(LIBS)
qproptrev$(EXEEXT): $(qproptrev_OBJECTS) $(qproptrev_DEPENDENCIES) 
	@rm -f qproptrev$(EXEEXT)
	$(CXXLINK) $(qproptrev_LDFLAGS) $(qproptrev_OBJECTS) $(qproptrev_LDADD) $(LIBS)
qqq_w$(EXEEXT): $(qqq_w_OBJECTS) $(qqq_w_DEPENDENCIES) 
	@rm -f qqq_w$(EXEEXT)
	$(CXXLINK) $(qqq_w_LDFLAGS) $(qqq_w_OBJECTS) $(qqq_w_LDADD) $(LIBS)
seqsource$(EXEEXT): $(seqsource_OBJECTS) $(seqsource_DEPENDENCIES) 
	@rm -f seqsource$(EXEEXT)
	$(CXXLINK) $(seqsource_LDFLAGS) $(seqsource_OBJECTS) $(seqsource_LDADD) $(LIBS)
sink_smearing$(EXEEXT): $(sink_smearing_OBJECTS) $(sink_smearing_DEPENDENCIES) 
	@rm -f sink_smearing$(EXEEXT)
	$(CXXLINK) $(sink_smearing_LDFLAGS) $(sink_smearing_OBJECTS) $(sink_smearing_LDADD) $(LIBS)
spectrum_w$(EXEEXT): $(spectrum_w_OBJECTS) $(spectrum_w_DEPENDENCIES) 
	@rm -f spectrum_w$(EXEEXT)
	$(CXXLINK) $(spectrum_w_LDFLAGS) $(spectrum_w_OBJECTS) $(spectrum_w_LDADD) $(LIBS)
stoutsmear$(EXEEXT): $(stoutsmear_OBJECTS) $(stoutsmear_DEPENDENCIES) 
	@rm -f stoutsmear$(EXEEXT)
	$(CXXLINK) $(stoutsmear_LDFLAGS) $(stoutsmear_OBJECTS) $(stoutsmear_LDADD) $(LIBS)
wallformfac$(EXEEXT): $(wallformfac_OBJECTS) $(wallformfac_DEPENDENCIES) 
	@rm -f wallformfac$(EXEEXT)
	$(CXXLINK) $(wallformfac_LDFLAGS) $(wallformfac_OBJECTS) $(wallformfac_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExampleBuildingBlocks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/apesmear.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bar3ptfn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfgtransf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chroma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collect_multi_propcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collect_propcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hmc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hypsmear.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hypsmear3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hypsmear4d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make_source.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mres.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_propagator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_propagator_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propagator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propagator_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propagator_hack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qpropadd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qpropgfix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qpropqio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qproptransf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qproptrev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qqq_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seqsource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sink_smearing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spectrum_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stoutsmear.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wallformfac.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am


#mainparam_io_SOURCES= mainparam_io.cc
#sink_smearing_DEPENDENCIES= build_chroma_libs rebuild_other_libs

#
# The latter rule will always try to rebuild libchroma.a when you 
# try to compile example

# build lib is a target that goes to the build dir of the library and 
# does a make to make sure all those dependencies are OK. In order
# for it to be done every time, we have to make it a 'phony' target
.PHONY: build_chroma_libs
build_chroma_libs:
	cd $(BUILDDIR)/lib ; $(MAKE)

.PHONY: rebuild_other_libs
rebuild_other_libs:
	cd $(BUILDDIR)/other_libs ; $(MAKE)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
