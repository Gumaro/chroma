# Makefile.in generated by automake 1.7.2 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_1 = -I$(TOPDIR)/other_libs/@SSE_DSLASH_DIR@/include -I@top_builddir@/other_libs/@SSE_DSLASH_DIR@/include
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_2 = -L@top_builddir@/other_libs/@SSE_DSLASH_DIR@/lib
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_3 = -llevel3 @QDPXX_LIBS@
VPATH = @top_srcdir@/mainprogs/main
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_PAB_WILSON_DSLASH_FALSE = @BUILD_PAB_WILSON_DSLASH_FALSE@
BUILD_PAB_WILSON_DSLASH_TRUE = @BUILD_PAB_WILSON_DSLASH_TRUE@
BUILD_SSE_WILSON_DSLASH_FALSE = @BUILD_SSE_WILSON_DSLASH_FALSE@
BUILD_SSE_WILSON_DSLASH_TRUE = @BUILD_SSE_WILSON_DSLASH_TRUE@
BUILD_STAGGERED_LIBS_FALSE = @BUILD_STAGGERED_LIBS_FALSE@
BUILD_STAGGERED_LIBS_TRUE = @BUILD_STAGGERED_LIBS_TRUE@
BUILD_WILSON_LIBS_FALSE = @BUILD_WILSON_LIBS_FALSE@
BUILD_WILSON_LIBS_TRUE = @BUILD_WILSON_LIBS_TRUE@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DVIPDF = @DVIPDF@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
QDPXX_CONFIG = @QDPXX_CONFIG@
QDPXX_CXXFLAGS = @QDPXX_CXXFLAGS@
QDPXX_LDFLAGS = @QDPXX_LDFLAGS@
QDPXX_LIBS = @QDPXX_LIBS@
QDPXX_NC = @QDPXX_NC@
QDPXX_ND = @QDPXX_ND@
QDPXX_NS = @QDPXX_NS@
QDPXX_PARALLEL_ARCH = @QDPXX_PARALLEL_ARCH@
QDPXX_PRECISION = @QDPXX_PRECISION@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSE_DSLASH_DIR = @SSE_DSLASH_DIR@
SSE_DSLASH_ENABLED = @SSE_DSLASH_ENABLED@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

#
# VPATH
#
TOPDIR = @top_srcdir@
BUILDDIR = @top_builddir@

#
# Include Path
#
INCFLAGS = -I$(TOPDIR)/mainprogs/main -I$(TOPDIR)/lib -I$(BUILDDIR)/lib

#
# Any other compiler flags
#
AM_CXXFLAGS = $(INCFLAGS) @CXXFLAGS@ @QDPXX_CXXFLAGS@ $(am__append_1)
AM_LDFLAGS = -L@top_builddir@/lib @LDFLAGS@ @QDPXX_LDFLAGS@ $(am__append_2)
LDADD = -lchroma @QDPXX_LIBS@ @LIBS@ $(am__append_3)

#
# Local Headers
#
HDRS = 

#noinst_PROGRAMS = propagator
check_PROGRAMS = propagator propagator_comp multi_propagator \
        multi_propagator_comp collect_propcomp collect_multi_propcomp \
        spectrum_w qqq_w seqsource \
        bar3ptfn make_source \
        ExampleBuildingBlocks hypsmear cfgtransf sink_smearing qproptransf \
        wallformfac


EXTRA_PROGRAMS = qpropadd seqprop dwf_seqprop seqprop_comp seqprop_collect

#
# The program and its dependencies
#
propagator_SOURCES = propagator.cc
propagator_DEPENDENCIES = build_chroma_libs rebuild_other_libs

propagator_comp_SOURCES = propagator_comp.cc
propagator_comp_DEPENDENCIES = build_chroma_libs rebuild_other_libs

multi_propagator_SOURCES = multi_propagator.cc
multi_propagator_DEPENDENCIES = build_chroma_libs rebuild_other_libs

multi_propagator_comp_SOURCES = multi_propagator_comp.cc
multi_propagator_comp_DEPENDENCIES = build_chroma_libs rebuild_other_libs

collect_propcomp_SOURCES = collect_propcomp.cc
collect_propcomp_DEPENDENCIES = build_chroma_libs rebuild_other_libs

collect_multi_propcomp_SOURCES = collect_multi_propcomp.cc
collect_multi_propcomp_DEPENDENCIES = build_chroma_libs rebuild_other_libs

spectrum_w_SOURCES = spectrum_w.cc
spectrum_w_DEPENDENCIES = build_chroma_libs rebuild_other_libs

qqq_w_SOURCES = qqq_w.cc
qqq_w_DEPENDENCIES = build_chroma_libs rebuild_other_libs

seqprop_SOURCES = seqprop.cc
seqprop_DEPENDENCIES = build_chroma_libs rebuild_other_libs

seqsource_SOURCES = seqsource.cc
seqsource_DEPENDENCIES = build_chroma_libs rebuild_other_libs

seqprop_comp_SOURCES = seqprop_comp.cc
seqprop_comp_DEPENDENCIES = build_chroma_libs rebuild_other_libs

seqprop_collect_SOURCES = seqprop_collect.cc
seqprop_collect_DEPENDENCIES = build_chroma_libs rebuild_other_libs

dwf_seqprop_SOURCES = dwf_seqprop.cc
dwf_seqprop_DEPENDENCIES = build_chroma_libs rebuild_other_libs

bar3ptfn_SOURCES = bar3ptfn.cc
bar3ptfn_DEPENDENCIES = build_chroma_libs rebuild_other_libs

wallformfac_SOURCES = wallformfac.cc
wallformfac_DEPENDENCIES = build_chroma_libs rebuild_other_libs

make_source_SOURCES = make_source.cc
make_source_DEPENDENCIES = build_chroma_libs rebuild_other_libs

hypsmear_SOURCES = hypsmear.cc
hypsmear_DEPENDENCIES = build_chroma_libs rebuild_other_libs

qproptransf_SOURCES = qproptransf.cc
qproptransf_DEPENDENCIES = build_chroma_libs rebuild_other_libs

qpropadd_SOURCES = qpropadd.cc
qpropadd_DEPENDENCIES = build_chroma_libs rebuild_other_libs

ExampleBuildingBlocks_SOURCES = ExampleBuildingBlocks.cc
ExampleBuildingBlocks_DEPENDENCIES = build_chroma_libs rebuild_other_libs

cfgtransf_SOURCES = cfgtransf.cc
cfgtransf_DEPENDENCIES = build_chroma_libs rebuild_other_libs

sink_smearing_SOURCES = sink_smearing.cc
sink_smearing_DEPENDENCIES = build_chroma_libs rebuild_other_libs
subdir = mainprogs/main
mkinstalldirs = $(SHELL) $(top_srcdir)/./config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/lib/chroma_config_internal.h
CONFIG_CLEAN_FILES =
EXTRA_PROGRAMS = qpropadd$(EXEEXT) seqprop$(EXEEXT) dwf_seqprop$(EXEEXT) \
	seqprop_comp$(EXEEXT) seqprop_collect$(EXEEXT)
check_PROGRAMS = propagator$(EXEEXT) propagator_comp$(EXEEXT) \
	multi_propagator$(EXEEXT) multi_propagator_comp$(EXEEXT) \
	collect_propcomp$(EXEEXT) collect_multi_propcomp$(EXEEXT) \
	spectrum_w$(EXEEXT) qqq_w$(EXEEXT) seqsource$(EXEEXT) \
	bar3ptfn$(EXEEXT) make_source$(EXEEXT) \
	ExampleBuildingBlocks$(EXEEXT) hypsmear$(EXEEXT) \
	cfgtransf$(EXEEXT) sink_smearing$(EXEEXT) qproptransf$(EXEEXT) \
	wallformfac$(EXEEXT)
am_ExampleBuildingBlocks_OBJECTS = ExampleBuildingBlocks.$(OBJEXT)
ExampleBuildingBlocks_OBJECTS = $(am_ExampleBuildingBlocks_OBJECTS)
ExampleBuildingBlocks_LDADD = $(LDADD)
ExampleBuildingBlocks_LDFLAGS =
am_bar3ptfn_OBJECTS = bar3ptfn.$(OBJEXT)
bar3ptfn_OBJECTS = $(am_bar3ptfn_OBJECTS)
bar3ptfn_LDADD = $(LDADD)
bar3ptfn_LDFLAGS =
am_cfgtransf_OBJECTS = cfgtransf.$(OBJEXT)
cfgtransf_OBJECTS = $(am_cfgtransf_OBJECTS)
cfgtransf_LDADD = $(LDADD)
cfgtransf_LDFLAGS =
am_collect_multi_propcomp_OBJECTS = collect_multi_propcomp.$(OBJEXT)
collect_multi_propcomp_OBJECTS = $(am_collect_multi_propcomp_OBJECTS)
collect_multi_propcomp_LDADD = $(LDADD)
collect_multi_propcomp_LDFLAGS =
am_collect_propcomp_OBJECTS = collect_propcomp.$(OBJEXT)
collect_propcomp_OBJECTS = $(am_collect_propcomp_OBJECTS)
collect_propcomp_LDADD = $(LDADD)
collect_propcomp_LDFLAGS =
am_dwf_seqprop_OBJECTS = dwf_seqprop.$(OBJEXT)
dwf_seqprop_OBJECTS = $(am_dwf_seqprop_OBJECTS)
dwf_seqprop_LDADD = $(LDADD)
dwf_seqprop_LDFLAGS =
am_hypsmear_OBJECTS = hypsmear.$(OBJEXT)
hypsmear_OBJECTS = $(am_hypsmear_OBJECTS)
hypsmear_LDADD = $(LDADD)
hypsmear_LDFLAGS =
am_make_source_OBJECTS = make_source.$(OBJEXT)
make_source_OBJECTS = $(am_make_source_OBJECTS)
make_source_LDADD = $(LDADD)
make_source_LDFLAGS =
am_multi_propagator_OBJECTS = multi_propagator.$(OBJEXT)
multi_propagator_OBJECTS = $(am_multi_propagator_OBJECTS)
multi_propagator_LDADD = $(LDADD)
multi_propagator_LDFLAGS =
am_multi_propagator_comp_OBJECTS = multi_propagator_comp.$(OBJEXT)
multi_propagator_comp_OBJECTS = $(am_multi_propagator_comp_OBJECTS)
multi_propagator_comp_LDADD = $(LDADD)
multi_propagator_comp_LDFLAGS =
am_propagator_OBJECTS = propagator.$(OBJEXT)
propagator_OBJECTS = $(am_propagator_OBJECTS)
propagator_LDADD = $(LDADD)
propagator_LDFLAGS =
am_propagator_comp_OBJECTS = propagator_comp.$(OBJEXT)
propagator_comp_OBJECTS = $(am_propagator_comp_OBJECTS)
propagator_comp_LDADD = $(LDADD)
propagator_comp_LDFLAGS =
am_qpropadd_OBJECTS = qpropadd.$(OBJEXT)
qpropadd_OBJECTS = $(am_qpropadd_OBJECTS)
qpropadd_LDADD = $(LDADD)
qpropadd_LDFLAGS =
am_qproptransf_OBJECTS = qproptransf.$(OBJEXT)
qproptransf_OBJECTS = $(am_qproptransf_OBJECTS)
qproptransf_LDADD = $(LDADD)
qproptransf_LDFLAGS =
am_qqq_w_OBJECTS = qqq_w.$(OBJEXT)
qqq_w_OBJECTS = $(am_qqq_w_OBJECTS)
qqq_w_LDADD = $(LDADD)
qqq_w_LDFLAGS =
am_seqprop_OBJECTS = seqprop.$(OBJEXT)
seqprop_OBJECTS = $(am_seqprop_OBJECTS)
seqprop_LDADD = $(LDADD)
seqprop_LDFLAGS =
am_seqprop_collect_OBJECTS = seqprop_collect.$(OBJEXT)
seqprop_collect_OBJECTS = $(am_seqprop_collect_OBJECTS)
seqprop_collect_LDADD = $(LDADD)
seqprop_collect_LDFLAGS =
am_seqprop_comp_OBJECTS = seqprop_comp.$(OBJEXT)
seqprop_comp_OBJECTS = $(am_seqprop_comp_OBJECTS)
seqprop_comp_LDADD = $(LDADD)
seqprop_comp_LDFLAGS =
am_seqsource_OBJECTS = seqsource.$(OBJEXT)
seqsource_OBJECTS = $(am_seqsource_OBJECTS)
seqsource_LDADD = $(LDADD)
seqsource_LDFLAGS =
am_sink_smearing_OBJECTS = sink_smearing.$(OBJEXT)
sink_smearing_OBJECTS = $(am_sink_smearing_OBJECTS)
sink_smearing_LDADD = $(LDADD)
sink_smearing_LDFLAGS =
am_spectrum_w_OBJECTS = spectrum_w.$(OBJEXT)
spectrum_w_OBJECTS = $(am_spectrum_w_OBJECTS)
spectrum_w_LDADD = $(LDADD)
spectrum_w_LDFLAGS =
am_wallformfac_OBJECTS = wallformfac.$(OBJEXT)
wallformfac_OBJECTS = $(am_wallformfac_OBJECTS)
wallformfac_LDADD = $(LDADD)
wallformfac_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/lib
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/ExampleBuildingBlocks.Po \
@AMDEP_TRUE@	./$(DEPDIR)/bar3ptfn.Po ./$(DEPDIR)/cfgtransf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collect_multi_propcomp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collect_propcomp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwf_seqprop.Po ./$(DEPDIR)/hypsmear.Po \
@AMDEP_TRUE@	./$(DEPDIR)/make_source.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_propagator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_propagator_comp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/propagator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/propagator_comp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/qpropadd.Po ./$(DEPDIR)/qproptransf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/qqq_w.Po ./$(DEPDIR)/seqprop.Po \
@AMDEP_TRUE@	./$(DEPDIR)/seqprop_collect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/seqprop_comp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/seqsource.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sink_smearing.Po \
@AMDEP_TRUE@	./$(DEPDIR)/spectrum_w.Po \
@AMDEP_TRUE@	./$(DEPDIR)/wallformfac.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(ExampleBuildingBlocks_SOURCES) $(bar3ptfn_SOURCES) \
	$(cfgtransf_SOURCES) $(collect_multi_propcomp_SOURCES) \
	$(collect_propcomp_SOURCES) $(dwf_seqprop_SOURCES) \
	$(hypsmear_SOURCES) $(make_source_SOURCES) \
	$(multi_propagator_SOURCES) $(multi_propagator_comp_SOURCES) \
	$(propagator_SOURCES) $(propagator_comp_SOURCES) \
	$(qpropadd_SOURCES) $(qproptransf_SOURCES) $(qqq_w_SOURCES) \
	$(seqprop_SOURCES) $(seqprop_collect_SOURCES) \
	$(seqprop_comp_SOURCES) $(seqsource_SOURCES) \
	$(sink_smearing_SOURCES) $(spectrum_w_SOURCES) \
	$(wallformfac_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(ExampleBuildingBlocks_SOURCES) $(bar3ptfn_SOURCES) $(cfgtransf_SOURCES) $(collect_multi_propcomp_SOURCES) $(collect_propcomp_SOURCES) $(dwf_seqprop_SOURCES) $(hypsmear_SOURCES) $(make_source_SOURCES) $(multi_propagator_SOURCES) $(multi_propagator_comp_SOURCES) $(propagator_SOURCES) $(propagator_comp_SOURCES) $(qpropadd_SOURCES) $(qproptransf_SOURCES) $(qqq_w_SOURCES) $(seqprop_SOURCES) $(seqprop_collect_SOURCES) $(seqprop_comp_SOURCES) $(seqsource_SOURCES) $(sink_smearing_SOURCES) $(spectrum_w_SOURCES) $(wallformfac_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  mainprogs/main/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
ExampleBuildingBlocks$(EXEEXT): $(ExampleBuildingBlocks_OBJECTS) $(ExampleBuildingBlocks_DEPENDENCIES) 
	@rm -f ExampleBuildingBlocks$(EXEEXT)
	$(CXXLINK) $(ExampleBuildingBlocks_LDFLAGS) $(ExampleBuildingBlocks_OBJECTS) $(ExampleBuildingBlocks_LDADD) $(LIBS)
bar3ptfn$(EXEEXT): $(bar3ptfn_OBJECTS) $(bar3ptfn_DEPENDENCIES) 
	@rm -f bar3ptfn$(EXEEXT)
	$(CXXLINK) $(bar3ptfn_LDFLAGS) $(bar3ptfn_OBJECTS) $(bar3ptfn_LDADD) $(LIBS)
cfgtransf$(EXEEXT): $(cfgtransf_OBJECTS) $(cfgtransf_DEPENDENCIES) 
	@rm -f cfgtransf$(EXEEXT)
	$(CXXLINK) $(cfgtransf_LDFLAGS) $(cfgtransf_OBJECTS) $(cfgtransf_LDADD) $(LIBS)
collect_multi_propcomp$(EXEEXT): $(collect_multi_propcomp_OBJECTS) $(collect_multi_propcomp_DEPENDENCIES) 
	@rm -f collect_multi_propcomp$(EXEEXT)
	$(CXXLINK) $(collect_multi_propcomp_LDFLAGS) $(collect_multi_propcomp_OBJECTS) $(collect_multi_propcomp_LDADD) $(LIBS)
collect_propcomp$(EXEEXT): $(collect_propcomp_OBJECTS) $(collect_propcomp_DEPENDENCIES) 
	@rm -f collect_propcomp$(EXEEXT)
	$(CXXLINK) $(collect_propcomp_LDFLAGS) $(collect_propcomp_OBJECTS) $(collect_propcomp_LDADD) $(LIBS)
dwf_seqprop$(EXEEXT): $(dwf_seqprop_OBJECTS) $(dwf_seqprop_DEPENDENCIES) 
	@rm -f dwf_seqprop$(EXEEXT)
	$(CXXLINK) $(dwf_seqprop_LDFLAGS) $(dwf_seqprop_OBJECTS) $(dwf_seqprop_LDADD) $(LIBS)
hypsmear$(EXEEXT): $(hypsmear_OBJECTS) $(hypsmear_DEPENDENCIES) 
	@rm -f hypsmear$(EXEEXT)
	$(CXXLINK) $(hypsmear_LDFLAGS) $(hypsmear_OBJECTS) $(hypsmear_LDADD) $(LIBS)
make_source$(EXEEXT): $(make_source_OBJECTS) $(make_source_DEPENDENCIES) 
	@rm -f make_source$(EXEEXT)
	$(CXXLINK) $(make_source_LDFLAGS) $(make_source_OBJECTS) $(make_source_LDADD) $(LIBS)
multi_propagator$(EXEEXT): $(multi_propagator_OBJECTS) $(multi_propagator_DEPENDENCIES) 
	@rm -f multi_propagator$(EXEEXT)
	$(CXXLINK) $(multi_propagator_LDFLAGS) $(multi_propagator_OBJECTS) $(multi_propagator_LDADD) $(LIBS)
multi_propagator_comp$(EXEEXT): $(multi_propagator_comp_OBJECTS) $(multi_propagator_comp_DEPENDENCIES) 
	@rm -f multi_propagator_comp$(EXEEXT)
	$(CXXLINK) $(multi_propagator_comp_LDFLAGS) $(multi_propagator_comp_OBJECTS) $(multi_propagator_comp_LDADD) $(LIBS)
propagator$(EXEEXT): $(propagator_OBJECTS) $(propagator_DEPENDENCIES) 
	@rm -f propagator$(EXEEXT)
	$(CXXLINK) $(propagator_LDFLAGS) $(propagator_OBJECTS) $(propagator_LDADD) $(LIBS)
propagator_comp$(EXEEXT): $(propagator_comp_OBJECTS) $(propagator_comp_DEPENDENCIES) 
	@rm -f propagator_comp$(EXEEXT)
	$(CXXLINK) $(propagator_comp_LDFLAGS) $(propagator_comp_OBJECTS) $(propagator_comp_LDADD) $(LIBS)
qpropadd$(EXEEXT): $(qpropadd_OBJECTS) $(qpropadd_DEPENDENCIES) 
	@rm -f qpropadd$(EXEEXT)
	$(CXXLINK) $(qpropadd_LDFLAGS) $(qpropadd_OBJECTS) $(qpropadd_LDADD) $(LIBS)
qproptransf$(EXEEXT): $(qproptransf_OBJECTS) $(qproptransf_DEPENDENCIES) 
	@rm -f qproptransf$(EXEEXT)
	$(CXXLINK) $(qproptransf_LDFLAGS) $(qproptransf_OBJECTS) $(qproptransf_LDADD) $(LIBS)
qqq_w$(EXEEXT): $(qqq_w_OBJECTS) $(qqq_w_DEPENDENCIES) 
	@rm -f qqq_w$(EXEEXT)
	$(CXXLINK) $(qqq_w_LDFLAGS) $(qqq_w_OBJECTS) $(qqq_w_LDADD) $(LIBS)
seqprop$(EXEEXT): $(seqprop_OBJECTS) $(seqprop_DEPENDENCIES) 
	@rm -f seqprop$(EXEEXT)
	$(CXXLINK) $(seqprop_LDFLAGS) $(seqprop_OBJECTS) $(seqprop_LDADD) $(LIBS)
seqprop_collect$(EXEEXT): $(seqprop_collect_OBJECTS) $(seqprop_collect_DEPENDENCIES) 
	@rm -f seqprop_collect$(EXEEXT)
	$(CXXLINK) $(seqprop_collect_LDFLAGS) $(seqprop_collect_OBJECTS) $(seqprop_collect_LDADD) $(LIBS)
seqprop_comp$(EXEEXT): $(seqprop_comp_OBJECTS) $(seqprop_comp_DEPENDENCIES) 
	@rm -f seqprop_comp$(EXEEXT)
	$(CXXLINK) $(seqprop_comp_LDFLAGS) $(seqprop_comp_OBJECTS) $(seqprop_comp_LDADD) $(LIBS)
seqsource$(EXEEXT): $(seqsource_OBJECTS) $(seqsource_DEPENDENCIES) 
	@rm -f seqsource$(EXEEXT)
	$(CXXLINK) $(seqsource_LDFLAGS) $(seqsource_OBJECTS) $(seqsource_LDADD) $(LIBS)
sink_smearing$(EXEEXT): $(sink_smearing_OBJECTS) $(sink_smearing_DEPENDENCIES) 
	@rm -f sink_smearing$(EXEEXT)
	$(CXXLINK) $(sink_smearing_LDFLAGS) $(sink_smearing_OBJECTS) $(sink_smearing_LDADD) $(LIBS)
spectrum_w$(EXEEXT): $(spectrum_w_OBJECTS) $(spectrum_w_DEPENDENCIES) 
	@rm -f spectrum_w$(EXEEXT)
	$(CXXLINK) $(spectrum_w_LDFLAGS) $(spectrum_w_OBJECTS) $(spectrum_w_LDADD) $(LIBS)
wallformfac$(EXEEXT): $(wallformfac_OBJECTS) $(wallformfac_DEPENDENCIES) 
	@rm -f wallformfac$(EXEEXT)
	$(CXXLINK) $(wallformfac_LDFLAGS) $(wallformfac_OBJECTS) $(wallformfac_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExampleBuildingBlocks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bar3ptfn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfgtransf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collect_multi_propcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collect_propcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwf_seqprop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hypsmear.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make_source.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_propagator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_propagator_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propagator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propagator_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qpropadd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qproptransf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qqq_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seqprop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seqprop_collect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seqprop_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seqsource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sink_smearing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spectrum_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wallformfac.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-checkPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am


#mainparam_io_SOURCES= mainparam_io.cc
#sink_smearing_DEPENDENCIES= build_chroma_libs rebuild_other_libs

#
# The latter rule will always try to rebuild libchroma.a when you 
# try to compile example

# build lib is a target that goes to the build dir of the library and 
# does a make to make sure all those dependencies are OK. In order
# for it to be done every time, we have to make it a 'phony' target
.PHONY: build_chroma_libs
build_chroma_libs:
	cd @top_builddir@/lib ; $(MAKE)

.PHONY: rebuild_other_libs
rebuild_other_libs:
	cd @top_builddir@/other_libs ; $(MAKE)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
